name: "ImageNet_Zeiler"

input: "data"
input_dim: 128
input_dim: 3
input_dim: 224
input_dim: 224

# ------------------------ layer 1 -----------------------------
layer {
    name: "conv1"
    type: "conv"
    bottom: "data"
    top: "conv1"
    conv_param{
    num_output: 96
    kernel_size: 7
        pad: 1
        stride: 2
        weight_filler { 
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}

layer {
    name: "relu1"
    type: "relu"
    bottom: "conv1"
    top: "conv1"
}

layer {
    name: "norm1"
    type: "lrn"
    bottom: "conv1"
    top: "norm1"
    lrn_param{
        local_size: 3
        alpha: 0.00005
        beta: 0.75
        norm_region: WITHIN_CHANNEL
    }
}

layer {
    name: "pool1"
    type: "pool"
    bottom: "norm1"
    top: "pool1"
    pool_param{
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}

#-----------------------layer 2-------------------------
layer {
    name: "conv2"
    type: "conv"
    bottom: "pool1"
    top: "conv2"
    conv_param{
        num_output: 256
        kernel_size: 5
        pad: 0
        stride: 2
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 1
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}
 
layer {
    name: "relu2"
    type: "relu"
    bottom: "conv2"
    top: "conv2"
}

layer {
    name: "norm2"
    type: "lrn"
    bottom: "conv2"
    top: "norm2"
    lrn_param{
        local_size: 3
        alpha: 0.00005
        beta: 0.75
        norm_region: WITHIN_CHANNEL
    }
}

layer {
    name: "pool2"
    type: "pool"
    bottom: "norm2"
    top: "pool2"
    pool_param{
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}

#-----------------------layer 3-------------------------
layer {
    name: "conv3"
    type: "conv"
    bottom: "pool2"
    top: "conv3"
    conv_param{
        num_output: 384
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}


layer {
    name: "relu3"
    type: "relu"
    bottom: "conv3"
    top: "conv3"
}

#-----------------------layer 4-------------------------
layer {
    name: "conv4"
    type: "conv"
    bottom: "conv3"
    top: "conv4"
    conv_param{
        num_output: 384
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 1
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}

layer {
    name: "relu4"
    type: "relu"
    bottom: "conv4"
    top: "conv4"
}

#-----------------------layer 5-------------------------
 layer {
    name: "conv5"
    type: "conv"
    bottom: "conv4"
    top: "conv5"
    conv_param{
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 1
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}

layer {
    name: "relu5"
    type: "relu"
    bottom: "conv5"
    top: "conv5"
}

#--------------------------layer spm------------------------
layer {
    name: "pool5_spm6"
    type: "pool"
    pool_param{
        kernel_size: 3
        stride: 2
        pool: MAX
    }
    bottom: "conv5"
    top: "pool5_spm6"
}

layer {
    name: "pool5_spm6_flatten"
    type: "flatten"
    bottom: "pool5_spm6"
    top: "pool5_spm6_flatten"
}


layer {
    name: "pool5_spm3"
    type: "pool"
    pool_param{
        kernel_size: 5
        stride: 4
        pool: MAX
    }
    bottom: "conv5"
    top: "pool5_spm3"
}

layer {
    name: "pool5_spm3_flatten"
    type: "flatten"
    bottom: "pool5_spm3"
    top: "pool5_spm3_flatten"
}

layer {
    name: "pool5_spm2"
    type: "pool"
    pool_param{
        kernel_size: 7
        stride: 7
        pool: MAX
    }
    bottom: "conv5"
    top: "pool5_spm2"
}

layer {
    name: "pool5_spm2_flatten"
    type: "flatten"
    bottom: "pool5_spm2"
    top: "pool5_spm2_flatten"
}

layer {
    name: "pool5_spm1"
    type: "pool"
    pool_param{
        kernel_size: 13
        stride: 13
        pool: MAX
    }
    bottom: "conv5"
    top: "pool5_spm1"
}


layer {
    name: "pool5_spm1_flatten"
    type: "flatten"
    bottom: "pool5_spm1"
    top: "pool5_spm1_flatten"
}

layer {
    name: "pool5_spm"
    type: "concat"
    concat_param{
        concat_dim: 1
    }
    bottom: "pool5_spm1_flatten"
    bottom: "pool5_spm2_flatten"
    bottom: "pool5_spm3_flatten"
    bottom: "pool5_spm6_flatten"
    top: "pool5_spm"
}

#--------------------------layer 6------------------------
layer {
    name: "fc6"
    type: "inner_product"
    bottom: "pool5_spm"
    top: "fc6"
    inner_product_param{
        num_output: 4096
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 1
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}

layer {
    name: "relu6"
    type: "relu"
    bottom: "fc6"
    top: "fc6"
}

layer {
    name: "drop6"
    type: "dropout"
    dropout_param{
        dropout_ratio: 0.5
    }
    bottom: "fc6"
    top: "fc6"
}

#--------------------------layer 7------------------------
layer {
    name: "fc7"
    type: "inner_product"
    bottom: "fc6"
    top: "fc7"
    inner_product_param{
        num_output: 4096
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 1
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}

layer {
    name: "relu7"
    type: "relu"
    bottom: "fc7"
    top: "fc7"
}

layer {
    name: "drop7"
    type: "dropout"
    dropout_param{
        dropout_ratio: 0.5
    }
    bottom: "fc7"
    top: "fc7"
}

#--------------------------layer 8------------------------
layer {
    name: "fc8"
    type: "inner_product"
    bottom: "fc7"
    top: "fc8"
    inner_product_param{
        num_output: 1000
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 1
        }
    }
    blobs_lr: 1.0
    blobs_lr: 2.0
}
 
layer {
    name: "prob"
    type: "softmax"
    bottom: "fc8"
    top: "prob"
}

