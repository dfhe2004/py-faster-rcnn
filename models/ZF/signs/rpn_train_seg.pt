name: "ZF"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  top: 'pixels'
  python_param {
    module: 'sarpoint.cnn.roi_data_layer'
    layer: 'SegRoIDataLayer'
    param_str: '{"num_classes": 2, "im_size":[2,512,512] }'
  }
}

#========= conv1-conv5 ============
layer {
	name: "conv1"
	type: "Convolution"
	bottom: "data"
	top: "conv1"
    #param { lr_mult: 0 decay_mult: 0 }
    #param { lr_mult: 0 decay_mult: 0 }
    param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }	
    convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
	}
}
layer {
	name: "relu1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}
layer {
	name: "norm1"
	type: "LRN"
	bottom: "conv1"
	top: "norm1"
	lrn_param {
		local_size: 3
		alpha: 0.00005
		beta: 0.75
		norm_region: WITHIN_CHANNEL
	}
}
layer {
	name: "pool1"
	type: "Pooling"
	bottom: "norm1"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv2"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2"
    #param { lr_mult: 0 decay_mult: 0 }
    #param { lr_mult: 0 decay_mult: 0 }
    param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }	
    convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
	}
}
layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}
layer {
	name: "norm2"
	type: "LRN"
	bottom: "conv2"
	top: "norm2"
	lrn_param {
		local_size: 3
		alpha: 0.00005
		beta: 0.75
		norm_region: WITHIN_CHANNEL
	}
}
layer {
	name: "pool2"
	type: "Pooling"
	bottom: "norm2"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3"
    #param { lr_mult: 0 decay_mult: 0 }
    #param { lr_mult: 0 decay_mult: 0 }
    param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }	
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu3"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}
layer {
	name: "conv4"
	type: "Convolution"
	bottom: "conv3"
	top: "conv4"
    #param { lr_mult: 0 decay_mult: 0 }
    #param { lr_mult: 0 decay_mult: 0 }
    param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }	
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu4"
	type: "ReLU"
	bottom: "conv4"
	top: "conv4"
}
layer {
	name: "conv5"
	type: "Convolution"
	bottom: "conv4"
	top: "conv5"
    #param { lr_mult: 0 decay_mult: 0 }
    #param { lr_mult: 0 decay_mult: 0 }
    param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }	
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu5"
	type: "ReLU"
	bottom: "conv5"
	top: "conv5"
}


#--- seg layer
layer {
  name: "roi_pool_1"
  type: "ROIPooling"
  bottom: 'pool1'
  bottom: "gt_boxes"
  top: "roi_pool_1"
  propagate_down: 0
  propagate_down: 0
  roi_pooling_param {
    pooled_w: 16
    pooled_h: 16
    spatial_scale: 0.25 # 1/16
  }
}

layer {
  name: "roi_pool_2"
  type: "ROIPooling"
  bottom: 'pool2'
  bottom: "gt_boxes"
  top: "roi_pool_2"
  propagate_down: 0
  propagate_down: 0
  roi_pooling_param {
    pooled_w: 16
    pooled_h: 16
    spatial_scale: 0.0625 # 1/16
  }
}

layer {
  name: "roi_pool_5"
  type: "ROIPooling"
  bottom: 'conv5'
  bottom: "gt_boxes"
  top: "roi_pool_5"
  propagate_down: 0
  propagate_down: 0
  roi_pooling_param {
    pooled_w: 16
    pooled_h: 16
    spatial_scale: 0.0625 # 1/16
  }
}

layer {
    name: "seg"
    type: "Concat"
    concat_param{
        concat_dim: 1
    }
    bottom: "roi_pool_1"
    bottom: "roi_pool_2"
    bottom: "roi_pool_5"
    top: "seg"
}

layer {
  name: "seg_conv1"
  type: "Convolution"
  bottom: "seg"
  top: "seg_conv1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  propagate_down: 0                 # disable bp
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "seg_relu1"
  type: "ReLU"
  bottom: "seg_conv1"
  top: "seg_conv1"
}
layer {
  name: "seg_cls"
  type: "Convolution"
  bottom: "seg_conv1"
  top: "seg_cls"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output:  2     # 2(bg/fg) * 4*4(anchors); 4asp. * 4sacle ;  
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}


layer {
  name: "seg_cls_loss"
  type: "SoftmaxWithLoss"
  bottom: "seg_cls"   
  bottom: "pixels"              
  propagate_down: 1
  propagate_down: 0                 # bp skip bottom[1]: pixels
  top: "seg_cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
